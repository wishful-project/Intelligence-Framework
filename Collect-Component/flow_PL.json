[{"id":"dfca7471.a1e698","type":"tab","label":"cooja collect"},{"id":"2ccc54b4.8ffd1c","type":"subflow","name":"param_config","info":"","in":[{"x":100,"y":100,"wires":[{"id":"50dac24a.d1c73c"}]}],"out":[{"x":740,"y":80,"wires":[{"id":"af8c03e1.2882f","port":0}]}]},{"id":"fdcac4bc.f79df8","type":"subflow","name":"final_action","info":"","in":[{"x":160,"y":160,"wires":[{"id":"a770bd16.a63cf"}]}],"out":[]},{"id":"127ce787.bea268","type":"subflow","name":"cooja_setup","info":"","in":[{"x":60,"y":100,"wires":[{"id":"3ac28a1a.7999f6"}]}],"out":[{"x":860,"y":320,"wires":[{"id":"c2ef489.b00e7b8","port":0}]}]},{"id":"dded60f6.fe4b2","type":"subflow","name":"Measurment","info":"","in":[{"x":120,"y":100,"wires":[{"id":"51e340b4.ab5e6"}]}],"out":[{"x":860,"y":240,"wires":[{"id":"48119838.49d9c8","port":0}]},{"x":860,"y":580,"wires":[{"id":"41b27a70.2168e4","port":0},{"id":"f5b68345.5b732","port":0}]},{"x":860,"y":280,"wires":[{"id":"f0329892.498c48","port":0}]}]},{"id":"422359ef.8e2e38","type":"function","z":"dfca7471.a1e698","name":"Experiment Setup","func":"// Get coordinates of IMEC w-ilab.t sensor nodes\nfunction ID_to_cord(ID)\n{   var cord = {};\n\tswitch(ID)\n\t{\n\t\tcase 1:  cord = {X: 6.0,  Y: 2.0}; break;\tcase 22: cord = {X: 6.0,  Y: 9.2 }; break;\tcase 43: cord = {X: 6.0,  Y: 16.4}; break;\n\t\tcase 2:  cord = {X: 12.0, Y: 2.0}; break;\tcase 23: cord = {X: 12.0, Y: 9.2 }; break;\tcase 44: cord = {X: 12.0, Y: 16.4}; break;\n\t\tcase 3:  cord = {X: 18.0, Y: 2.0}; break;\tcase 24: cord = {X: 18.0, Y: 9.2 }; break;\tcase 45: cord = {X: 18.0, Y: 16.4}; break;\n\t\tcase 4:  cord = {X: 24.0, Y: 2.0}; break;\tcase 25: cord = {X: 24.0, Y: 9.2 }; break;\tcase 46: cord = {X: 24.0, Y: 16.4}; break;\n\t\tcase 5:  cord = {X: 30.0, Y: 2.0}; break;\tcase 26: cord = {X: 30.0, Y: 9.2 }; break;\tcase 47: cord = {X: 30.0, Y: 16.4}; break;\n\t\tcase 6:  cord = {X: 36.0, Y: 2.0}; break;\tcase 27: cord = {X: 36.0, Y: 9.2 }; break;\tcase 48: cord = {X: 36.0, Y: 16.4}; break;\n\t\tcase 7:  cord = {X: 42.0, Y: 2.0}; break;\tcase 28: cord = {X: 42.0, Y: 9.2 }; break;\tcase 49: cord = {X: 42.0, Y: 16.4}; break;\n\t\tcase 8:  cord = {X: 48.0, Y: 2.0}; break;\tcase 29: cord = {X: 48.0, Y: 9.2 }; break;\tcase 50: cord = {X: 48.0, Y: 16.4}; break;\n\t\tcase 9:  cord = {X: 54.0, Y: 2.0}; break;\tcase 30: cord = {X: 54.0, Y: 9.2 }; break;\tcase 51: cord = {X: 54.0, Y: 16.4}; break;\n\t\tcase 10: cord = {X: 60.0, Y: 2.0}; break;\tcase 31: cord = {X: 60.0, Y: 9.2 }; break;\tcase 52: cord = {X: 60.0, Y: 16.4}; break;\n\t\tcase 11: cord = {X: 6.0,  Y: 5.6}; break;\tcase 33: cord = {X: 6.0,  Y: 12.8}; break;\n\t\tcase 12: cord = {X: 12.0, Y: 5.6}; break;\tcase 34: cord = {X: 12.0, Y: 12.8}; break;\tcase 53: cord = {X: 12.0, Y: 20.0}; break;\n\t\tcase 13: cord = {X: 18.0, Y: 5.6}; break;\tcase 35: cord = {X: 18.0, Y: 12.8}; break;\tcase 54: cord = {X: 18.0, Y: 20.0}; break;\n\t\tcase 14: cord = {X: 24.0, Y: 5.6}; break;\tcase 36: cord = {X: 24.0, Y: 12.8}; break;\n\t\tcase 15: cord = {X: 30.0, Y: 5.4}; break;\tcase 37: cord = {X: 30.0, Y: 12.8}; break;\tcase 55: cord = {X: 30.0, Y: 20.0}; break;\n\t\tcase 16: cord = {X: 36.0, Y: 5.5}; break;\tcase 38: cord = {X: 36.0, Y: 12.8}; break;\tcase 56: cord = {X: 36.0, Y: 20.0}; break;\n\t\tcase 17: cord = {X: 42.0, Y: 5.5}; break;\tcase 39: cord = {X: 42.0, Y: 12.8}; break;\tcase 57: cord = {X: 42.0, Y: 20.0}; break;\n\t\tcase 18: cord = {X: 48.0, Y: 5.5}; break;\tcase 40: cord = {X: 48.0, Y: 12.8}; break;\tcase 58: cord = {X: 48.0, Y: 20.0}; break;\n\t\tcase 19: cord = {X: 54.0, Y: 5.5}; break;\tcase 41: cord = {X: 54.0, Y: 12.8}; break;\tcase 59: cord = {X: 54.0, Y: 20.0}; break;\n\t\tcase 20: cord = {X: 60.0, Y: 5.5}; break;\tcase 42: cord = {X: 60.0, Y: 12.8}; break;\tcase 60: cord = {X: 60.0, Y: 20.0}; break;\n\t}\n\treturn cord;\n}\n// IMEC w-ilab.t Testbed\n// ┌─────────────────────────────────────────────────────────────────────┐\n// │  1      2      3      4      5      6      7      8      9      10  │\n// │  11     12     13     14     15     16     17     18     19     20  │\n// │  22     23     24     25     26     27     28     29     30     31  │\n// │  33     34     35     36     37     38     39     40     41     42  │\n// │  43     44     45     46     47     48     49     50     51     52  │\n// │         53     54            55     56     57     58     59     60  │\n// └─────────────────────────────────────────────────────────────────────┘\n\nvar sink_ID   = [ 5 ];\n//var source_ID = [ 22, 23, 24, 25, 26, 27, 28, 29, 30 ];\nvar source_ID = [ 24, 25, 26, 27 ];\n\n// Cooja simulation parameters\nmsg.cooja = {\n    radiomedium : {\n        transmitting_range : \"50.0\",\n        interference_range : \"100.0\"\n    },\n    motetype : {\n        platform     : \"rm090\",\n        CONTIKI_DIR  : \"/home/mmehari/contiki\",\n        app_path_rel : \"examples/rime/single-hop_WSN.c\"\n    }\n};\n\n\n\n// ******* Do not change beyond this line ******* //\n// nodes used in the experiment\nvar GROUPs = {};\n// Sink nodes group definition\nGROUPs.sink = [];\nfor(var i=0; i<sink_ID.length; i++)\n{\n    GROUPs.sink.push({ID: sink_ID[i], loc: ID_to_cord(sink_ID[i])});\n}\n// Source nodes group definition\nGROUPs.source = [];\nfor(var i=0; i<source_ID.length; i++)\n{\n    GROUPs.source.push({ID: source_ID[i], loc: ID_to_cord(source_ID[i])});\n}\n\n// Make nodes and ids global\ncontext.global.GROUPs = GROUPs;\n\n// Convert integer to hexadecimal of given size\ncontext.global.int2hex = function (integer, size)\n{\n\t// Is the passed value an integer\n\tif(Number.isInteger(integer) === true)\n\t{\n\t\tvar buf = Buffer.allocUnsafe(4);\n\t\t// 8 bit integer\n\t\tif(size == 1)\n\t\t{\n\t\t\tvar uint8 = new Uint8Array([integer]);\n\t\t\tbuf.writeUInt8(uint8[0], 0);\n\t\t}\n\t\t// 16 bit integer\n\t\telse if(size == 2)\n\t\t{\n\t\t\tvar uint16 = new Uint16Array([integer]);\n\t\t\tbuf.writeUInt16LE(uint16[0], 0);\n\t\t}\n\t\t// Else, use 32 bit integer\n\t\telse\n\t\t{\n\t\t\tsize = 4;\n\t\t\tvar uint32 = new Uint32Array([integer]);\n\t\t\tbuf.writeUInt32LE(uint32[0], 0);\n\t\t}\n\t\treturn buf.toString('hex', 0, size);\n\t}\n\telse\n\t{\n\t\tconsole.error(\"int2hex: \" + integer + \" is not an integer\");\n\t}\n};\n\nreturn msg;\n","outputs":1,"noerr":0,"x":190,"y":220,"wires":[["e83f5af6.398568"]]},{"id":"feca1dc3.2391e","type":"comment","z":"dfca7471.a1e698","name":"Experiment Setup + Initialization","info":"In this part of the experiment, initial configuraton and setting up of the experiment is conducted.\n\nTODO\n\nAt the end of this phase, the experimentation setup will be in a known state with all default parameters configured.","x":170,"y":160,"wires":[]},{"id":"cc8c849.715ac78","type":"comment","z":"dfca7471.a1e698","name":"Initial parameter settings","info":"","x":630,"y":140,"wires":[]},{"id":"f995d8d8.0d4328","type":"function","z":"dfca7471.a1e698","name":"Radio Parameters","func":"\n// Group of nodes global variable\nvar GROUPs = context.global.GROUPs;\n\n// Radio UIDs\nvar UID =\n{\n    phy_channel         : 14751,\n    phy_txPower         : 28244\n};\n\n// Variable types\nvar UINT_T = 0;\nvar INT_T  = 1;\n\n// Default radio parameters\nvar radio_parameters = \n[\n    // Set parameters on sink and source nodes\n    {\n        GROUPs: [GROUPs.sink, GROUPs.source],\n        control_hdr:\n        [   \n            { uid: UID.phy_channel,         type: UINT_T,   len: 1, value : 27  },  // channel [11-32]\n            { uid: UID.phy_txPower,         type: INT_T,    len: 1, value : 5   }   // transmission power\n        ]\n    }\n];\n\n// ******* Do not change beyond this line ******* //\nvar msg = {};\nmsg.parameters = radio_parameters;\nmsg.topic = \"radio_configuration\";\n\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":220,"wires":[["68178fe7.d46a3"]]},{"id":"57500133.1a477","type":"comment","z":"dfca7471.a1e698","name":"Experiment Intelligence","info":"","x":140,"y":380,"wires":[]},{"id":"658babd1.b88c94","type":"function","z":"dfca7471.a1e698","name":"Parameters Under Test","func":"\n// Group of nodes global variable\nvar GROUPs = context.global.GROUPs;\n\n// PUT UIDs\nvar UID =\n{\n    IEEE802154_phyTXPower       : 28244,\n    reload_active_radio_program : 28170\n};\n\nvar UINT_T = 0;\nvar INT_T  = 1;\n\n// Parameters Under Test\nvar PUT = \n{\n    GROUPs: [GROUPs.source],\n    opcode: 1,\n    control_hdr:\n    [\n        { uid: UID.IEEE802154_phyTXPower,       type: INT_T,    len: 1, values : [-7, -4, -2, 0, 1, 2, 3] },   // transmission power\n\n        // This is not part of PUT but used to reload the active radio program everytime PUT is updated\n        { uid: UID.reload_active_radio_program, type: UINT_T,   len: 1, values : [1] }\n    ]\n};\n\n// Save PUT as a global variable\ncontext.global.PUT = PUT;\n\nmsg = {};\nmsg.PUT = PUT;\nmsg.topic = \"start_experiment\";\n\n\nreturn msg;","outputs":1,"noerr":0,"x":210,"y":460,"wires":[["4f1aaae7.4d46c4"]]},{"id":"2121f3e2.48c3bc","type":"comment","z":"dfca7471.a1e698","name":"TODO","info":"1. experiment planning and reasoning blocks as node-red nodes\n   optimization, modelling, stopping criteria to be defined as part of the node-red blocks\n2. split UPI parameters from custom parameters\n3. Error handling in the UPI parameter configuration block.\n4. Experiment planning\n   latin hypercube sampling, random, exhaustive, locating array, \n5. Objective calculation parsers will be identical for different experiment execution block (i.e. testbed, cooja)\n","x":110,"y":900,"wires":[]},{"id":"b4478f18.78109","type":"comment","z":"dfca7471.a1e698","name":"Planning","info":"","x":420,"y":420,"wires":[]},{"id":"adc47910.160cc8","type":"comment","z":"dfca7471.a1e698","name":"Execution","info":"","x":600,"y":420,"wires":[]},{"id":"d490cced.0bfc","type":"function","z":"dfca7471.a1e698","name":"Application Parameters","func":"\n// Group of nodes global variable\nvar GROUPs = context.global.GROUPs;\n\n// Application UIDs\nvar UID = \n{\n    send_interval   : 19367,\n    activate_app    : 25440,\n    message_size    : 57215,\n    receiver        : 57217,\n    source_IDs      : 57218\n};\n\n// Variable types\nvar UINT_T = 0;\nvar INT_T  = 1;\n\n// Sink and source node IDs\nvar sink_ID = GROUPs.sink[0].ID;\nvar source_IDs = [];\nfor(var i = 0; i < GROUPs.source.length; i++)\n    source_IDs.push(GROUPs.source[i].ID);\n\n// Default application parameters\nvar app_parameters = \n[\n    // Set parameters on sink nodes\n    {\n        GROUPs: [GROUPs.sink],\n        control_hdr:\n        [\n            { uid: UID.receiver,        type: UINT_T,    len: 2,     value : sink_ID    },  // Receiver ID\n            { uid: UID.source_IDs,      type: UINT_T,    len: 2,     value : source_IDs },  // source IDs\n            { uid: UID.activate_app,    type: UINT_T,    len: 1,     value : 1          }   // Activate application\n        ]\n    },\n    // Set parameters on source nodes\n    {\n        GROUPs: [GROUPs.source],\n        control_hdr:\n        [\n            { uid: UID.send_interval,   type: UINT_T,    len: 4,     value : 128 },          // Send within 1 second\n            { uid: UID.message_size,    type: UINT_T,    len: 1,     value : 100 },          // Unicast message size\n            { uid: UID.receiver,        type: UINT_T,    len: 2,     value : sink_ID  },     // Sink ID\n            { uid: UID.activate_app,    type: UINT_T,    len: 1,     value : 1 }             // Activate application\n        ]\n    }\n];\n\nvar msg = {};\nmsg.parameters = app_parameters;\nmsg.topic = \"app_configuration\";\n\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":180,"wires":[["68178fe7.d46a3"]]},{"id":"9264f556.824c38","type":"function","z":"dfca7471.a1e698","name":"Custom Parameters","func":"\n// Group of nodes global variable\nvar GROUPs = context.global.GROUPs;\n\n// Custom UIDs\nvar UID =\n{\n    reload_active_radio_program : 28170\n};\n\n// Variable types\nvar UINT_T = 0;\nvar INT_T  = 1;\n\n// Default radio parameters\nvar custom_parameters = \n[\n    // Set parameters on sink and source nodes\n    {\n        GROUPs: [GROUPs.sink, GROUPs.source],\n        control_hdr:\n        [\n            { uid: UID.reload_active_radio_program, type: UINT_T,   len: 1, value : 1 }    // Reload active redio program\n        ]\n    }\n];\n\nvar msg = {};\nmsg.parameters = custom_parameters;\nmsg.topic = \"custom_configuration\";\n\nreturn msg;","outputs":1,"noerr":0,"x":620,"y":260,"wires":[["68178fe7.d46a3"]]},{"id":"50dac24a.d1c73c","type":"function","z":"2ccc54b4.8ffd1c","name":"combine_param","func":"\n// Convert integer to hexadecimal of given size\nvar int2hex = context.global.int2hex;\n\n// Update parameters to default state\nvar parameters = msg.parameters;\nvar payload = [];\nfor(var i = 0; i < parameters.length; i++)\n{\n    var groups = parameters[i].GROUPs;\n    var control_hdr_orig = parameters[i].control_hdr;\n    \n    // Update control header values\n    var control_hdr = [];\n    for(var j = 0; j < control_hdr_orig.length; j++)\n    {\n        var uid = control_hdr_orig[j].uid;\n        var type = control_hdr_orig[j].type;\n        var len_orig = control_hdr_orig[j].len;\n        var value_orig = control_hdr_orig[j].value;\n\n        // value is a number\n        if(typeof(value_orig) == \"number\")\n        {\n            var value = int2hex(value_orig, len_orig);\n        \tvar len = len_orig;\n        }\n        // value is a string\n        else if(typeof(value_orig) == \"string\")\n        {\n            var value = \"\";\n            for(var k = 0; k < value_orig.length; k++)\n        \t    value = value + value_orig.charCodeAt(k);\n            var len = value_orig.length;\n        }\n        // value is an array or an object\n        else if(typeof(value_orig) == \"object\")\n        {\n            var value = \"\";\n            for(var k in value_orig)\n        \t    value = value + int2hex(value_orig[k], len_orig);\n        \tvar len = len_orig * Object.keys(value_orig).length;\n        }\n        \n        control_hdr.push({uid: uid, type: type, len: len, value : value});\n    }\n\n    // Update group of nodes\n    for(var j = 0; j < groups.length; j++)\n    {\n        var nodes = groups[j];\n    \tvar node_count = Object.keys(nodes).length;\n    \tfor(var k = 0; k < node_count; k++)\n    \t{\n    \t    var ptsFile = nodes[k].ptsFile;\n    \t    \n    \t    payload.push({ptsFile : ptsFile, opcode : 1, control_hdr : control_hdr});\n    \t}\n    }\n}\n\nif(msg.topic == \"app_configuration\")\n{\n    context.app_configuration = payload;\n}\nelse if(msg.topic == \"radio_configuration\")\n{\n    context.radio_configuration = payload;\n}\nelse if(msg.topic == \"custom_configuration\")\n{\n    context.custom_configuration = payload;\n}\n\nif(typeof(context.app_configuration) !== \"undefined\" && typeof(context.radio_configuration) !== \"undefined\" && typeof(context.custom_configuration) !== \"undefined\")\n{\n    var configurations = context.app_configuration.concat(context.radio_configuration.concat(context.custom_configuration));\n\n    // Bind identical ptsFile request configurations\n    for(var i = 0; i < configurations.length; i++)\n    {\n        // Search remaining configurations having similar ptsFiles and similar opcodes\n        for(var j = i+1; j < configurations.length; j++)\n        {\n           if((configurations[i].ptsFile == configurations[j].ptsFile) && (configurations[i].opcode == configurations[j].opcode))\n           {\n               configurations[i].control_hdr = configurations[i].control_hdr.concat(configurations[j].control_hdr);\n               configurations.splice(j,1);\n               j--;\n           }\n        }\n    }\n\n    msg = {};\n    msg.payload = configurations;\n    msg.topic = \"start_experiment\";\n\n    // Reset context parameters for next round\n    delete context.app_configuration;\n    delete context.radio_configuration;\n    delete context.custom_configuration;\n\n    return msg;\n}\n\n","outputs":1,"noerr":0,"x":240,"y":100,"wires":[["93a77663.cb66d8"]]},{"id":"68178fe7.d46a3","type":"subflow:2ccc54b4.8ffd1c","z":"dfca7471.a1e698","name":"","x":860,"y":220,"wires":[["f588c087.1ce03"]]},{"id":"25232dfe.1d5632","type":"debug","z":"2ccc54b4.8ffd1c","name":"default_stderr","active":true,"console":"true","complete":"true","x":800,"y":140,"wires":[]},{"id":"af8c03e1.2882f","type":"function","z":"2ccc54b4.8ffd1c","name":"default check","func":"\n// PUT execution request/response payload\nvar payload   = msg.payload;\nvar error_msg = msg.error_msg;\n\n// Iterate through all request/response parameters and verify that values are successfully executed [\"00\"]\nfor(var i = 0; i < payload.length; i++)\n{\n    var request  = payload[i].request;\n    var response = payload[i].response;\n    \n    var control_hdr = response.control_hdr;\n    for(var j = 0; j < control_hdr.length; j++)\n    {\n        // Are parameters executed successfully?\n        if(control_hdr[j].value === \"00\")\n        {\n\t\t\tcontrol_hdr.splice(j, 1);\n\t\t\tj--;\n        }\n    }\n    \n    // Display errors\n    if(control_hdr.length !== 0)\n        error_msg.push({request: request, response: response});\n}\n\n// delete PUT execution request/response payload\ndelete msg.payload;\n    \n// Do we have an error message\nif(error_msg.length !== 0)\n    return [null, {payload: error_msg}];\n// Experiment execution has passed\nelse\n    return [msg, null];","outputs":"2","noerr":0,"x":610,"y":100,"wires":[[],["25232dfe.1d5632"]]},{"id":"d562d571.3d70b8","type":"link in","z":"dfca7471.a1e698","name":"experiment_setup","links":["cad5031f.ce83b","b2f800fd.70b48"],"x":55,"y":220,"wires":[["422359ef.8e2e38"]]},{"id":"5d7a5c2e.85f964","type":"link in","z":"dfca7471.a1e698","name":"PUT","links":["72a6250f.461e0c","f588c087.1ce03"],"x":55,"y":460,"wires":[["658babd1.b88c94"]]},{"id":"f588c087.1ce03","type":"link out","z":"dfca7471.a1e698","name":"reasoning","links":["5d7a5c2e.85f964"],"x":1015,"y":220,"wires":[]},{"id":"5f39396e.667518","type":"link in","z":"dfca7471.a1e698","name":"planning","links":["cf45859f.5ab428","f15a1d2b.73394","cffaf00b.9bed6","ed15d9e.4ac6828","b1e465c3.f8bfc8","84f4b1eb.de37d","d4b35c63.7c04d","c84ff049.b212a","840ee49d.5fb4e8","39a0e98a.cf8746","feccecfd.d7035"],"x":295,"y":420,"wires":[["4f1aaae7.4d46c4"]]},{"id":"1c66ecc.ac53013","type":"UPI_exec","z":"dfca7471.a1e698","name":"PUT Exec","host":"127.0.0.1","port":"6200","timeout":"3000","retry":"3","x":600,"y":460,"wires":[["faab04f2.bf0c68"]]},{"id":"93a77663.cb66d8","type":"UPI_exec","z":"2ccc54b4.8ffd1c","name":"Default Exec","host":"127.0.0.1","port":"6200","timeout":"3000","retry":"3","x":430,"y":100,"wires":[["af8c03e1.2882f"]]},{"id":"b24094be.c4a1a8","type":"debug","z":"dfca7471.a1e698","name":"stderr","active":true,"console":"false","complete":"true","x":930,"y":520,"wires":[]},{"id":"9fc48c1b.ed7ca","type":"link in","z":"dfca7471.a1e698","name":"stderr","links":["12faedb7.c7ea92","1b7aefbe.cffac","85cadc9a.9c5be","7639e7ab.b9be68"],"x":815,"y":520,"wires":[["b24094be.c4a1a8"]]},{"id":"85cadc9a.9c5be","type":"link out","z":"dfca7471.a1e698","name":"LHD_stderr","links":["9fc48c1b.ed7ca"],"x":555,"y":520,"wires":[]},{"id":"840ee49d.5fb4e8","type":"link out","z":"dfca7471.a1e698","name":"collection","links":["5f39396e.667518"],"x":895,"y":420,"wires":[]},{"id":"8b109a79.481828","type":"comment","z":"dfca7471.a1e698","name":"Collection","info":"","x":760,"y":420,"wires":[]},{"id":"4f1aaae7.4d46c4","type":"exhaustive-search","z":"dfca7471.a1e698","name":"exhaustive","x":430,"y":460,"wires":[["1c66ecc.ac53013"],["85cadc9a.9c5be"]]},{"id":"9c9fa26b.04b55","type":"subflow:fdcac4bc.f79df8","z":"dfca7471.a1e698","name":"","x":170,"y":680,"wires":[]},{"id":"4c30e975.2e9c28","type":"comment","z":"dfca7471.a1e698","name":"Experiment Action","info":"","x":130,"y":620,"wires":[]},{"id":"40ed1bb4.063f74","type":"link in","z":"dfca7471.a1e698","name":"final_action","links":["8720d9a7.95f998"],"x":55,"y":680,"wires":[["9c9fa26b.04b55"]]},{"id":"8720d9a7.95f998","type":"link out","z":"dfca7471.a1e698","name":"final_action","links":["40ed1bb4.063f74"],"x":1035,"y":500,"wires":[]},{"id":"17ee11a5.e3ebbe","type":"function","z":"fdcac4bc.f79df8","name":"PL_calc","func":"\nvar dataset = msg.payload.split('\\n').filter(String);\nvar len = dataset.length;\n\n\nvar sum = [0, 0, 0, 0, 0];\nvar gradient;\nvar intercept;\n\nfor (var i = 0; i < dataset.length; i++)\n{\n    var data = dataset[i].split('\\t');\n    var x = parseFloat(data[0]);\n    var y = parseFloat(data[1]);\n\n    if (y !== null)\n    {\n        sum[0] += x;\n        sum[1] += y;\n        sum[2] += x * x;\n        sum[3] += x * y;\n        sum[4] += y * y;\n    }\n    else\n    {\n        len--;\n    }\n}\n\ngradient  = (len * sum[3] - sum[0] * sum[1]) / (len  * sum[2] - sum[0] * sum[0]);\nintercept = (sum[1] / len) - (gradient * sum[0]) / len;\n\nmsg.lin_reg  = \"y = \" + gradient  + \"x + \" + intercept;\nmsg.PL_coeff = gradient;\n\nreturn msg;","outputs":1,"noerr":0,"x":600,"y":160,"wires":[["84e0360.0422ec8"]]},{"id":"ea1e1ed0.7e382","type":"function","z":"dfca7471.a1e698","name":"Check","func":"\nif(msg.topic == \"planning_finished\")\n{\n    return [null, msg];\n}\nelse\n{\n    msg.sample_Idx = msg.sample_Idx + 1;\n    return [msg, null];\n}","outputs":"2","noerr":0,"x":930,"y":460,"wires":[["feccecfd.d7035"],["8720d9a7.95f998"]]},{"id":"feccecfd.d7035","type":"link out","z":"dfca7471.a1e698","name":"reasoning","links":["5f39396e.667518"],"x":1035,"y":420,"wires":[]},{"id":"3fae389e.c323f8","type":"inject","z":"dfca7471.a1e698","name":"Start experiment","topic":"start_experiment","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"x":140,"y":60,"wires":[["b2f800fd.70b48"]]},{"id":"b2f800fd.70b48","type":"link out","z":"dfca7471.a1e698","name":"experiment_setup","links":["d562d571.3d70b8"],"x":275,"y":60,"wires":[]},{"id":"5ede2750.f683d8","type":"function","z":"127ce787.bea268","name":"format cla","func":"\nvar ptyFiles = msg.payload.split('\\n').filter(function(e){return e;});\nmsg.payload  = ptyFiles.join(',');\n\nreturn msg;\n","outputs":"1","noerr":0,"x":360,"y":400,"wires":[["43884616.0b15a8","773248b4.a523b8"]]},{"id":"e6221134.af67f","type":"comment","z":"127ce787.bea268","name":"Retrieve pts devices","info":"","x":130,"y":360,"wires":[]},{"id":"3ac28a1a.7999f6","type":"function","z":"127ce787.bea268","name":"cooja csc template","func":"// Retrieve base name of a path\nfunction baseName(path)\n{\n    var base = path.substring(path.lastIndexOf('/') + 1); \n    if(base.lastIndexOf(\".\") != -1)       \n        base = base.substring(0, base.lastIndexOf(\".\"));\n    return base;\n}\n\n// Retrieve directory name of a path\nfunction dirName(path)\n{\n    var dir = \"\";\n    if(path.lastIndexOf('/') != -1)\n        dir = path.substring(0, path.lastIndexOf('/'));\n    else\n        dir = path;\n    return dir;\n}\n\nvar cooja = msg.cooja;\nvar platform = cooja.motetype.platform;\nvar CONTIKI_DIR = cooja.motetype.CONTIKI_DIR;\nvar app_path_rel = cooja.motetype.app_path_rel;\nvar app_path_CONTIKI = \"[CONTIKI_DIR]/\" + app_path_rel;\n\nvar simconf = \n[\n    {name: \"simulation\", children:\n    [\n        {name: \"title\",         text: \"node-red_WSN_example\"},\n        {name: \"speedlimit\",    text: \"1.0\"},\n        {name: \"randomseed\",    text: \"123456\"},\n        {name: \"motedelay_us\",  text: \"1000000\"},\n        {name: \"radiomedium\",   text: \"org.contikios.cooja.radiomediums.UDGM\", children: \n        [\n            {name: \"transmitting_range\",    text: cooja.radiomedium.transmitting_range},\n            {name: \"interference_range\",    text: cooja.radiomedium.interference_range},\n            {name: \"success_ratio_tx\",      text: \"1.0\"},\n            {name: \"success_ratio_rx\",      text: \"1.0\"}\n        ]},\n        {name: \"events\", children: \n        [\n            {name: \"logoutput\", text: \"40000\"}\n        ]},\n        {name: \"motetype\", text: \"org.contikios.cooja.mspmote.\" + platform.toUpperCase() + \"MoteType\", children: \n        [\n            {name: \"identifier\",    text: platform + \"1\"},\n            {name: \"description\",   text: platform + \" Mote Type #\" + platform},\n            {name: \"source\",        text: app_path_CONTIKI, attrs: {EXPORT: \"discard\"}},\n            {name: \"commands\",      text: \"make \" + baseName(app_path_CONTIKI) + \".\" + platform + \" TARGET=\" + platform, attrs: {EXPORT: \"discard\"}},\n            {name: \"firmware\",      text: dirName(app_path_CONTIKI) + \"/\" + baseName(app_path_CONTIKI) + \".\" + platform, attrs: {EXPORT: \"copy\"}},\n            [\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.interfaces.Position\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.interfaces.RimeAddress\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.interfaces.IPAddress\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.interfaces.Mote2MoteRelations\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.interfaces.MoteAttributes\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.MspClock\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.MspMoteID\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.MspButton\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.CC2520Radio\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.UsciA1Serial\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.MspLED\"},\n                {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.MspDebugOutput\"}\n            ]\n        ]},\n    ]},\n    {name: \"plugin\",  text: \"de.fau.cooja.plugins.Serial2PtyPlugin\"},\n    {name: \"plugin\",  text: \"org.contikios.cooja.plugins.ScriptRunner\", children:\n        [{name: \"plugin_config\", children: \n        [\n            {name: \"script\", text: \"TIMEOUT(1000000000000);\"},\n            {name: \"active\", text: \"false\"}\n        ]}]\n    }\n];\n\n// Create mote configuration\nvar GROUPs = context.global.GROUPs;\nvar motecount = 0;\n\n// Add mote configuration to simulation configuration\nfor(var i in simconf)\n{\n    // Search the last object within simulation object\n    if(simconf[i].name == 'simulation')\n    {\n        var sim_obj = simconf[i].children;\n        var key = Object.keys(sim_obj)[Object.keys(sim_obj).length-1] + 1;\n        \n        for(var g in GROUPs)\n        {\n            for(var n in GROUPs[g])\n            {\n                sim_obj[key] = {name: \"mote\", children:\n                [\n                    {name: \"breakpoints\"},\n                    {name: \"interface_config\",      text: \"org.contikios.cooja.interfaces.Position\", children:\n                    [\n                          {name: \"x\", text: GROUPs[g][n].loc.X},\n                          {name: \"y\", text: GROUPs[g][n].loc.Y},\n                          {name: \"z\", text: \"0\"}\n                    ]},\n                    {name: \"interface_config\",      text: \"org.contikios.cooja.mspmote.interfaces.MspClock\",  children: [{name: \"deviation\", text: \"1.0\"}]},\n                    {name: \"interface_config\",      text: \"org.contikios.cooja.mspmote.interfaces.MspMoteID\", children: [{name: \"id\", text: GROUPs[g][n].ID}]},\n                    {name: \"motetype_identifier\",   text: platform + \"1\"}\n                ]};\n                key++;\n            }\n        }\n    }\n    // Search the last object within plugin object\n    else if(simconf[i].name == 'plugin' && simconf[i].text == \"org.contikios.cooja.plugins.TimeLine\")\n    {\n        var plugin_config_obj = simconf[i].children[0].children;\n        var key = Object.keys(plugin_config_obj)[Object.keys(plugin_config_obj).length-1] + 1;\n        \n        for(var g in GROUPs)\n        {\n            for(var n in GROUPs[g])\n            {\n                plugin_config_obj[key] = {name: \"mote\", text: motecount};\n                motecount++;\n                key++;\n            }\n        }\n    }\n}\n\nmsg.payload = {simconf: simconf};\nmsg.filename = CONTIKI_DIR + \"/\" + dirName(app_path_rel) + \"/\" + baseName(app_path_rel) + \".csc\";\n\nreturn msg;","outputs":1,"noerr":0,"x":210,"y":100,"wires":[["c380b4c2.ab5128"]]},{"id":"788f1a4d.811c04","type":"comment","z":"127ce787.bea268","name":"Create cooja simulation file","info":"","x":150,"y":60,"wires":[]},{"id":"43884616.0b15a8","type":"exec","z":"127ce787.bea268","command":"pts_mux -g","addpay":true,"append":"","useSpawn":true,"timer":"","name":"start pts_mux","x":540,"y":400,"wires":[["c2ef489.b00e7b8"],["a9b4fbbf.ac70b8"],[]]},{"id":"c2ef489.b00e7b8","type":"function","z":"127ce787.bea268","name":"pts to nodeID","func":"\nif(msg.payload == \"pts_mux has STARTED\")\n{\n    context.pts_mux = msg.payload;\n}\nelse if(msg.topic == \"start_experiment\")\n{\n    context.ptsFiles = msg.payload;\n}\n\nif(typeof context.pts_mux !== 'undefined' && typeof context.ptsFiles !== 'undefined')\n//if(typeof context.ptsFiles !== 'undefined')\n{\n    var ptsFiles = context.ptsFiles.split(',');\n    var GROUPs = context.global.GROUPs;\n    \n    // Make sure the number of assingned nodes and configured pts devices are the same\n    var pts_count = ptsFiles.length;\n    var sink_count = GROUPs.sink.length;\n    var source_count = GROUPs.source.length;\n    if(pts_count != sink_count + source_count)\n    {\n        msg.error = \"Assigned and configured node count does not match\";\n        delete msg.payload;\n        return [null, msg];\n    }\n\n    // Match sink nodes to pts devices\n    for(var i = 0; i < sink_count; i++)\n    {\n        GROUPs.sink[i].ptsFile  = ptsFiles[i];\n    }\n    // Match source nodes to pts devices\n    for(var j = 0; j < source_count; i++,j++)\n    {\n        GROUPs.source[j].ptsFile  = ptsFiles[i];\n    }\n    \n    context.global.GROUPs = GROUPs;\n    delete context.ptsFiles;\n    delete context.pts_mux;\n    \n    return [msg, null];\n}","outputs":"2","noerr":0,"x":730,"y":340,"wires":[[],["32538fd9.3eb68"]]},{"id":"a9b4fbbf.ac70b8","type":"function","z":"127ce787.bea268","name":"buf2str","func":"msg.payload = msg.payload.toString('utf8');\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":400,"wires":[["32538fd9.3eb68"]]},{"id":"4c97db5e.8e7184","type":"link in","z":"127ce787.bea268","name":"pts_devices","links":["773248b4.a523b8"],"x":595,"y":340,"wires":[["c2ef489.b00e7b8"]]},{"id":"773248b4.a523b8","type":"link out","z":"127ce787.bea268","name":"pts_devices","links":["4c97db5e.8e7184"],"x":475,"y":340,"wires":[]},{"id":"32538fd9.3eb68","type":"debug","z":"127ce787.bea268","name":"cooja_stderr","active":true,"console":"false","complete":"true","x":910,"y":400,"wires":[]},{"id":"9f9e383f.38cff8","type":"tcpClient","z":"127ce787.bea268","name":"pts devices","host":"127.0.0.1","port":"6100","client_disconnects":false,"x":190,"y":400,"wires":[["5ede2750.f683d8"]]},{"id":"c380b4c2.ab5128","type":"js2xml","z":"127ce787.bea268","name":"","x":390,"y":100,"wires":[["cdc9d595.9fa3d8"]]},{"id":"cdc9d595.9fa3d8","type":"file_out","z":"127ce787.bea268","name":"cooja csc","appendNewline":true,"overwriteFile":"true","x":540,"y":100,"wires":[["dc7c81d2.852f3"]]},{"id":"57e59473.1189cc","type":"cooja","z":"127ce787.bea268","name":"","restart":true,"x":310,"y":240,"wires":[["c1393762.4ff288"],["11c20717.d4a839"]]},{"id":"11c20717.d4a839","type":"link out","z":"127ce787.bea268","name":"stderr1","links":["d4b7860a.0da878"],"x":415,"y":260,"wires":[]},{"id":"e3e1fb67.5867d8","type":"link in","z":"127ce787.bea268","name":"from_cooja","links":["c1393762.4ff288"],"x":55,"y":400,"wires":[["9f9e383f.38cff8"]]},{"id":"d4b7860a.0da878","type":"link in","z":"127ce787.bea268","name":"stderr","links":["9047960c.dd1898","8b098695.0fbc48","11c20717.d4a839","c1393762.4ff288"],"x":595,"y":460,"wires":[["a9b4fbbf.ac70b8"]]},{"id":"1004a447.b23b2c","type":"comment","z":"127ce787.bea268","name":"(Re)Start cooja simulator","info":"","x":150,"y":200,"wires":[]},{"id":"e8555660.ae66d8","type":"link in","z":"127ce787.bea268","name":"to_cooja","links":["dc7c81d2.852f3"],"x":55,"y":240,"wires":[["7445fdb3.1b4ee4"]]},{"id":"dc7c81d2.852f3","type":"link out","z":"127ce787.bea268","name":"to_cooja","links":["e8555660.ae66d8"],"x":655,"y":100,"wires":[]},{"id":"c1393762.4ff288","type":"link out","z":"127ce787.bea268","name":"from_cooja","links":["e3e1fb67.5867d8","d4b7860a.0da878"],"x":415,"y":220,"wires":[]},{"id":"ecdbbc0f.92115","type":"comment","z":"127ce787.bea268","name":"Start pts multiplexer","info":"","x":530,"y":300,"wires":[]},{"id":"7445fdb3.1b4ee4","type":"function","z":"127ce787.bea268","name":"format","func":"\nvar cooja = msg.payload[0].cooja;\nvar topic = msg.payload[0].topic;\n\nreturn {payload: {CONTIKI_DIR: cooja.motetype.CONTIKI_DIR, app_path_rel: cooja.motetype.app_path_rel}, topic: topic};","outputs":1,"noerr":0,"x":170,"y":240,"wires":[["57e59473.1189cc"]]},{"id":"e83f5af6.398568","type":"subflow:127ce787.bea268","z":"dfca7471.a1e698","name":"","x":390,"y":220,"wires":[["d490cced.0bfc","f995d8d8.0d4328","9264f556.824c38"]]},{"id":"f0329892.498c48","type":"link in","z":"dded60f6.fe4b2","name":"stderr","links":["43cc822c.82fbcc","a2b3269.3a6c7d8","8a4e1528.8c50e8"],"x":795,"y":280,"wires":[[]]},{"id":"a2b3269.3a6c7d8","type":"link out","z":"dded60f6.fe4b2","name":"stderr","links":["f0329892.498c48"],"x":695,"y":280,"wires":[]},{"id":"79f83d3c.390f34","type":"link in","z":"dded60f6.fe4b2","name":"delay_in","links":["f89722c9.aadb"],"x":115,"y":440,"wires":[["3171b047.0e50e"]]},{"id":"f89722c9.aadb","type":"link out","z":"dded60f6.fe4b2","name":"delay_in","links":["79f83d3c.390f34"],"x":695,"y":320,"wires":[]},{"id":"c54fe750.68e4e8","type":"comment","z":"dded60f6.fe4b2","name":"Reset statistic variables","info":"","x":280,"y":240,"wires":[]},{"id":"3171b047.0e50e","type":"delay","z":"dded60f6.fe4b2","name":"","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":240,"y":440,"wires":[["314b2c18.e4e4d4"]]},{"id":"21e17692.776c3a","type":"function","z":"dded60f6.fe4b2","name":"Retrv","func":"\n// Default application parameters\nvar GROUPs = context.global.GROUPs;\nvar sink_ptsFile = GROUPs.sink[0].ptsFile;\n\n// Retrieve PUT global variable\nvar PUT = context.global.PUT;\n\n// pts device file paths\nvar ptsFiles = [];\nfor(var i = 0; i < PUT.GROUPs.length; i++)\n{\n    var GROUP = PUT.GROUPs[i];\n    for(var j = 0; j < GROUP.length; j++)\n\t    ptsFiles.push(GROUP[j].ptsFile);\n}\n\n// Control opcode enumeration\nvar UID =\n{\n    EXAMPLEUNICASTRXSTATS    : 57216\n};\n\nvar parameters = [];\nfor(var i = 0; i < ptsFiles.length; i++)\n{\n    var ptsFile = ptsFiles[i];\n    \n    // RxStats parameters on sink nodes\n    var sender_ID;\n    \n    // Search for sender ID from the given pts device file path\n    for(var j = 0; j < GROUPs.source.length; j++)\n    {\n        if(ptsFile == GROUPs.source[j].ptsFile)\n        {\n            // senser ID is sent through the type attribute of control_hdr structure\n            sender_ID = GROUPs.source[j].ID;\n            break;\n        }\n    }\n    \n    var rx_parameter =\n    {\n        ptsFile: sink_ptsFile,\n        opcode: 0,\n        control_hdr:\n        [\n            { uid: UID.EXAMPLEUNICASTRXSTATS, type: sender_ID, len: 10 }      // Rx packet statistics\n        ]\n    };\n    \n    parameters.push(rx_parameter);\n}\n\n\nmsg.payload = parameters;\nreturn msg;\n\n","outputs":1,"noerr":0,"x":230,"y":600,"wires":[["b68f24f0.44d588"]]},{"id":"1df8c220.01c80e","type":"comment","z":"dded60f6.fe4b2","name":"Retrieve statistic variables","info":"","x":290,"y":560,"wires":[]},{"id":"314b2c18.e4e4d4","type":"link out","z":"dded60f6.fe4b2","name":"delay_out","links":["7bc280eb.f6658"],"x":355,"y":440,"wires":[]},{"id":"7bc280eb.f6658","type":"link in","z":"dded60f6.fe4b2","name":"delay_out","links":["314b2c18.e4e4d4"],"x":115,"y":600,"wires":[["21e17692.776c3a"]]},{"id":"43cc822c.82fbcc","type":"link out","z":"dded60f6.fe4b2","name":"stderr","links":["f0329892.498c48"],"x":695,"y":660,"wires":[]},{"id":"5d1750e2.972af","type":"link in","z":"dded60f6.fe4b2","name":"reset_in","links":["582a2686.b74f18"],"x":115,"y":280,"wires":[["e7351bea.18b378"]]},{"id":"582a2686.b74f18","type":"link out","z":"dded60f6.fe4b2","name":"reset_in","links":["5d1750e2.972af"],"x":375,"y":140,"wires":[]},{"id":"51e340b4.ab5e6","type":"function","z":"dded60f6.fe4b2","name":"PUT check","func":"\n// First appearing message\nif(msg.topic == \"start_experiment\")\n{\n    context.global.sample_Idx = 0;\n    msg.topic = \"exploration\";\n}\n\n// PUT execution request/response payload and error\nvar payload = msg.payload;\nvar error_msg = msg.error_msg;\n\n// Iterate through all request/response parameters and\n// 1. retrieve PUT parameter values\n// 2. verify that values are successfully executed [\"00\"]\nvar PUT_params = {};\nfor(var i = 0; i < payload.length; i++)\n{\n    var request  = payload[i].request;\n    var response = payload[i].response;\n    \n    var resp_control_hdr = response.control_hdr;\n    for(var j = 0; j < resp_control_hdr.length; j++)\n    {\n        // Is a parameter executed successfully?\n        if(resp_control_hdr[j].value === \"00\")\n        {\n\t\t\tresp_control_hdr.splice(j, 1);\n\t\t\tj--;\n        }\n    }\n    \n    // Display errors\n    if(resp_control_hdr.length !== 0)\n    {\n        error_msg.push({request: request, response: response});\n    }\n    else\n    {\n        var ptsFile  = request.ptsFile;\n        var req_control_hdr  = request.control_hdr;\n        \n        PUT_params[ptsFile] = [];\n        for(var j = 0; j < req_control_hdr.length; j++)\n        {\n            var uid   = req_control_hdr[j].uid;\n            var type  = req_control_hdr[j].type;\n            var len   = req_control_hdr[j].len;\n            var value;\n            \n            // UINT_T\n            if(type === 0)\n                value = Buffer.from(req_control_hdr[j].value, 'hex').readUIntLE(0, len);\n            // INT_T\n            else if(type === 1)\n                value = Buffer.from(req_control_hdr[j].value, 'hex').readIntLE(0, len);\n            \n            PUT_params[ptsFile].push(value);\n        }\n    }\n}\n\n// delete PUT execution request/response payload\ndelete msg.payload;\n    \n// Do we have an error message\nif(error_msg.length !== 0)\n{\n    msg.sample_Idx = context.global.sample_Idx;\n    return [msg, {payload: error_msg}, null];\n}\n// Experiment execution has passed\nelse\n{\n    // Save PUT parameters for later use\n    context.global.PUT_params = PUT_params;\n\t\n    return [null, null, msg];\n}","outputs":"3","noerr":0,"x":250,"y":100,"wires":[["66729a4d.8cedb4"],["8a4e1528.8c50e8"],["582a2686.b74f18"]]},{"id":"8a4e1528.8c50e8","type":"link out","z":"dded60f6.fe4b2","name":"stderr","links":["f0329892.498c48"],"x":375,"y":100,"wires":[]},{"id":"cda5d311.c2639","type":"comment","z":"dded60f6.fe4b2","name":"Wait before collecting results","info":"","x":300,"y":400,"wires":[]},{"id":"719da2db.f3248c","type":"function","z":"dded60f6.fe4b2","name":"reset check","func":"\n// PUT execution request/response payload and error\nvar payload = msg.payload;\nvar error_msg = msg.error_msg;\n\n// Iterate through all request/response parameters and verify that values are successfully executed [\"00\"]\nfor(var i = 0; i < payload.length; i++)\n{\n    var request  = payload[i].request;\n    var response = payload[i].response;\n    \n    var control_hdr = response.control_hdr;\n    \n    for(var j = 0; j < control_hdr.length; j++)\n    {\n        // Is a parameter executed successfully?\n        if(control_hdr[j].value === \"00\")\n        {\n\t\t\tcontrol_hdr.splice(j, 1);\n\t\t\tj--;\n        }\n    }\n    \n    // Display errors\n    if(control_hdr.length !== 0)\n        error_msg.push({request: request, response: response});\n}\n\n// delete PUT execution request/response payload\ndelete msg.payload;\n    \n// Do we have an error message\nif(error_msg.length !== 0)\n{\n    msg.sample_Idx = context.global.sample_Idx;\n    return [msg, {payload: error_msg}, null];\n}\n// Experiment execution has passed\nelse\n{\n    return [null, null, msg];\n}","outputs":"3","noerr":0,"x":570,"y":280,"wires":[["faa129d4.208fe8"],["a2b3269.3a6c7d8"],["f89722c9.aadb"]]},{"id":"faa129d4.208fe8","type":"link out","z":"dded60f6.fe4b2","name":"redo_experiment","links":["48119838.49d9c8"],"x":695,"y":240,"wires":[]},{"id":"66729a4d.8cedb4","type":"link out","z":"dded60f6.fe4b2","name":"redo_experiment","links":["48119838.49d9c8"],"x":375,"y":60,"wires":[]},{"id":"48119838.49d9c8","type":"link in","z":"dded60f6.fe4b2","name":"redo_experiment","links":["faa129d4.208fe8","66729a4d.8cedb4","7ac2473a.8f4d98"],"x":795,"y":240,"wires":[[]]},{"id":"7ac2473a.8f4d98","type":"link out","z":"dded60f6.fe4b2","name":"redo_experiment","links":["48119838.49d9c8"],"x":695,"y":540,"wires":[]},{"id":"832dbb63.0b2e98","type":"comment","z":"dded60f6.fe4b2","name":"redo experiment","info":"","x":980,"y":240,"wires":[]},{"id":"cb05747d.7d7de8","type":"comment","z":"dded60f6.fe4b2","name":"error message","info":"","x":970,"y":280,"wires":[]},{"id":"894f327b.7f942","type":"comment","z":"dded60f6.fe4b2","name":"experiment passed","info":"","x":990,"y":580,"wires":[]},{"id":"ac277442.9e8778","type":"UPI_exec","z":"dded60f6.fe4b2","name":"Reset Exec","host":"127.0.0.1","port":"6200","timeout":"3000","retry":"3","x":390,"y":280,"wires":[["719da2db.f3248c"]]},{"id":"b68f24f0.44d588","type":"UPI_exec","z":"dded60f6.fe4b2","name":"Retrv Exec","host":"127.0.0.1","port":"6200","timeout":"3000","retry":"3","x":390,"y":600,"wires":[["ec72fc80.719e1"]]},{"id":"41b27a70.2168e4","type":"file_out","z":"dded60f6.fe4b2","name":"header","appendNewline":true,"overwriteFile":"true","x":740,"y":580,"wires":[["79c9cb07.643a44"]]},{"id":"f5b68345.5b732","type":"file_out","z":"dded60f6.fe4b2","name":"dataset","appendNewline":true,"overwriteFile":"false","x":740,"y":620,"wires":[["79c9cb07.643a44"]]},{"id":"e7351bea.18b378","type":"function","z":"dded60f6.fe4b2","name":"Reset","func":"\n// Control opcode enumeration\nvar UID =\n{\n    EXAMPLEUNICASTRXSTATS    : 57216\n};\n\n// Default application parameters\nvar GROUPs = context.global.GROUPs;\nvar sink_ptsFile = GROUPs.sink[0].ptsFile;\n\n// Retrieve PUT global variable\nvar PUT = context.global.PUT;\n\n// pts device file paths\nvar ptsFiles = [];\nfor(var i = 0; i < PUT.GROUPs.length; i++)\n{\n    var GROUP = PUT.GROUPs[i];\n    for(var j = 0; j < GROUP.length; j++)\n\t    ptsFiles.push(GROUP[j].ptsFile);\n}\n\n// Integer to hexadicimal string convertor\nvar int2hex = context.global.int2hex;\n\nvar parameters = [];\nfor(var i = 0; i < ptsFiles.length; i++)\n{\n    var ptsFile = ptsFiles[i];\n\n    // Reset RxStat parameters    \n    var sender_ID;\n    var rxstats_value = \"\";\n    // Search for sender ID from the given pts device file path\n    for(var j = 0; j < GROUPs.source.length; j++)\n    {\n        if(ptsFile == GROUPs.source[j].ptsFile)\n        {\n            // senser ID is sent through the type attribute of control_hdr structure\n            sender_ID = GROUPs.source[j].ID;\n            \n            var rssi_sum_hex     = int2hex(0, 2);\n            var lqi_sum_hex      = int2hex(0, 2);\n            var packet_recvd_hex = int2hex(0, 2);\n            var packet_lost_hex  = int2hex(0, 2);\n\n            rxstats_value = rssi_sum_hex + lqi_sum_hex + packet_recvd_hex + packet_lost_hex;\n            break;\n        }\n    }\n    var rxstats_len = rxstats_value.length / 2;\n    var rx_parameter = \n    {\n        ptsFile: sink_ptsFile,\n        opcode: 1,\n        control_hdr:\n        [\n            { uid: UID.EXAMPLEUNICASTRXSTATS, type: sender_ID, len: rxstats_len, value: rxstats_value }\n        ]\n    };\n    \n    parameters.push(rx_parameter);\n}\n\n\n\n// ******* Do not change beyond this line ******* //\nmsg.payload = parameters;\n\nreturn msg;\n\n","outputs":1,"noerr":0,"x":230,"y":280,"wires":[["ac277442.9e8778"]]},{"id":"79c9cb07.643a44","type":"debug","z":"dded60f6.fe4b2","name":"Msrmt_stdout","active":true,"console":"false","complete":"true","x":920,"y":620,"wires":[]},{"id":"faab04f2.bf0c68","type":"subflow:dded60f6.fe4b2","z":"dfca7471.a1e698","name":"","x":770,"y":460,"wires":[["840ee49d.5fb4e8"],["ea1e1ed0.7e382"],["b24094be.c4a1a8"]]},{"id":"84e0360.0422ec8","type":"debug","z":"fdcac4bc.f79df8","name":"Action_stdout","active":true,"console":"false","complete":"true","x":780,"y":160,"wires":[]},{"id":"a770bd16.a63cf","type":"split_WI","z":"fdcac4bc.f79df8","name":"","complete":"payload","splt":"\\n","intval":"10","x":280,"y":160,"wires":[["13cc2900.a2e037"]]},{"id":"624c18d3.9d6348","type":"function","z":"dded60f6.fe4b2","name":"centr_output","func":"\nvar error_msg = msg.error_msg;\n\n// Do we have an error message\nif(error_msg.length !== 0)\n{\n    msg.sample_Idx = context.global.sample_Idx;\n    return [msg, null, null, {payload: error_msg}];\n}\nelse\n{\n    // Control opcode enumeration\n    var UID =\n    {\n        EXAMPLEUNICASTRXSTATS    : 57216\n    };\n    \n    // Retreive global PUT variable\n    var PUT = context.global.PUT;\n    \n    // Retreive PUT parameters\n    var PUT_params = context.global.PUT_params;\n    \n    // sample index\n    var sample_Idx = context.global.sample_Idx;\n    \n    var payload = msg.payload;\n    var RSSI_array = [];\n    for(var i = 0; i < payload.length; i++)\n    {\n        var response = payload[i].response;\n        var num_param = response.num_param;\n        \n        // We expect one message\n        if(num_param === 1)\n        {\n            var uid = response.control_hdr[0].uid;\n            \n            // RxStat message\n            if(uid === UID.EXAMPLEUNICASTRXSTATS)\n            {\n                var value = Buffer.from(response.control_hdr[0].value, 'hex');\n                \n                var rssi_sum      = value.readInt16LE(0);\n                var lqi_sum       = value.readUInt16LE(2);\n                var packet_recvd  = value.readUInt16LE(4);\n                var packet_lost   = value.readUInt16LE(6);\n                var seq_nr        = value.readUInt16LE(8);\n                \n                // Calculate performance objectives\n                if(packet_recvd > 0)\n                    RSSI_array.push(parseFloat(rssi_sum/packet_recvd));\n                else\n                    RSSI_array.push(-120.0);\n                    \n            }\n        }\n    }\n    \n    var RSSI_sum  = RSSI_array.reduce(function (a, b) {return a + b;}, 0);\n    var RSSI_avg  = RSSI_sum/(RSSI_array.length);\n            \n    // MOSBO file path and sampleSet string\n    var filename = \"/tmp/samplesValues.txt\";\n    // Dataset string = PUT parameters + performance objectives\n    var dataset_str = PUT_params[Object.keys(PUT_params)[0]].slice(0, -1).join('\\t')  + \"\\t\" + RSSI_avg;\n    \n    rxstats = [{filename: filename, payload: dataset_str}];\n\n    msg.payload = rxstats;\n    msg.sample_Idx = sample_Idx;\n    delete msg.error_msg;\n    \n    // Update sample index\n    context.global.sample_Idx = sample_Idx + 1;\n    \n    if(sample_Idx === 0)\n        return [null, msg, null, null];\n    else\n        return [null, null, msg, null];\n}\n","outputs":"4","noerr":0,"x":570,"y":680,"wires":[[],[],[],[]]},{"id":"13cc2900.a2e037","type":"file in","z":"fdcac4bc.f79df8","name":"dataset","filename":"","format":"utf8","x":440,"y":160,"wires":[["17ee11a5.e3ebbe"]]},{"id":"ec72fc80.719e1","type":"function","z":"dded60f6.fe4b2","name":"distr_output","func":"\nvar error_msg = msg.error_msg;\n\n// Do we have an error message\nif(error_msg.length !== 0)\n{\n    msg.sample_Idx = context.global.sample_Idx;\n    return [msg, null, null, {payload: error_msg}];\n}\nelse\n{\n    // Control opcode enumeration\n    var UID =\n    {\n        EXAMPLEUNICASTRXSTATS    : 57216\n    };\n    \n    // Default application parameters\n    var GROUPs = context.global.GROUPs;\n    \n    // Retreive global PUT variable\n    var PUT = context.global.PUT;\n    \n    // Retreive PUT parameters\n    var PUT_params = context.global.PUT_params;\n    \n    // sample index\n    var sample_Idx = context.global.sample_Idx;\n    \n    var payload = msg.payload;\n    var RSSI_list = {};\n    for(var i = 0; i < payload.length; i++)\n    {\n        var response  = payload[i].response;\n        var num_param = response.num_param;\n        \n        // We expect one message\n        if(num_param === 1)\n        {\n            var uid  = response.control_hdr[0].uid;\n            var sender_ID = response.control_hdr[0].type;\n            \n            // RxStat message\n            if(uid === UID.EXAMPLEUNICASTRXSTATS)\n            {\n                var value = Buffer.from(response.control_hdr[0].value, 'hex');\n                \n                var rssi_sum      = value.readInt16LE(0);\n                var lqi_sum       = value.readUInt16LE(2);\n                var packet_recvd  = value.readUInt16LE(4);\n                var packet_lost   = value.readUInt16LE(6);\n                var seq_nr        = value.readUInt16LE(8);\n                \n                // Calculate performance objectives\n                if(packet_recvd > 0)\n                    RSSI_list[sender_ID] = parseFloat(rssi_sum/packet_recvd);\n                else\n                    RSSI_list[sender_ID] = -120.0;\n            }\n        }\n    }\n\n    var rxstats = [];\n    \n    for(var ptsFile in PUT_params)\n    {\n        var sender_ID = -1;\n        // Search for sender ID from the given pts device file path\n        for(var j = 0; j < GROUPs.source.length; j++)\n        {\n            if(ptsFile == GROUPs.source[j].ptsFile)\n            {\n                sender_ID = GROUPs.source[j].ID;\n                break;\n            }\n        }\n        \n        // MOSBO file path\n        var filename = \"/tmp/samplesValues\" + sender_ID + \".txt\";\n        \n        // Dataset string = PUT parameters + performance objectives\n        var dataset_str = PUT_params[ptsFile].slice(0, -1).join('\\t') + \"\\t\" + RSSI_list[sender_ID];\n            \n        rxstats.push({filename: filename, payload: dataset_str});\n    }\n\n    msg.payload = rxstats;\n    msg.sample_Idx = sample_Idx;\n    delete msg.error_msg;\n    \n    // Update sample index\n    context.global.sample_Idx = sample_Idx + 1;\n    \n    if(sample_Idx === 0)\n        return [null, msg, null, null];\n    else\n        return [null, null, msg, null];\n}\n","outputs":"4","noerr":0,"x":570,"y":600,"wires":[["7ac2473a.8f4d98"],["41b27a70.2168e4"],["f5b68345.5b732"],["43cc822c.82fbcc"]]}]