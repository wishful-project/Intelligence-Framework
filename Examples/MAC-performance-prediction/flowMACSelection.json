[{"id":"ba4c4ba5.3971f8","type":"tab","label":"Testflow","disabled":false,"info":""},{"id":"fb9501c.5e192","type":"perfpred","z":"ba4c4ba5.3971f8","name":"Perfpred","x":640,"y":140,"wires":[["485a2e4b.669d5","317afb91.138f54"]]},{"id":"4a761800.162ea8","type":"inject","z":"ba4c4ba5.3971f8","name":"Start prediction","topic":"","payload":"{\"input_params\":[5,19.386593,3.6,18.35647,6,30]}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":180,"y":140,"wires":[["e0c24992.7e4b18"]]},{"id":"485a2e4b.669d5","type":"debug","z":"ba4c4ba5.3971f8","name":"Results","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":840,"y":100,"wires":[]},{"id":"39e3b0a5.4dd2b","type":"catch","z":"ba4c4ba5.3971f8","name":"Catch perfpred error","scope":["fb9501c.5e192"],"x":190,"y":320,"wires":[["c82c4076.8f84"]]},{"id":"c82c4076.8f84","type":"debug","z":"ba4c4ba5.3971f8","name":"Error","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":390,"y":320,"wires":[]},{"id":"e0c24992.7e4b18","type":"function","z":"ba4c4ba5.3971f8","name":"Init system variables","func":"var flowContext = context.flow;\nvar python_path = \"C:\\\\Users\\\\Administrator\\\\Anaconda3\\\\envs\\\\tensorflow\\\\python.exe\";\nflowContext.set('pythonpath',python_path);\n//context.flow = flowContext;\n\n// Manual inject input parameters\n// msg.payload.input_params = [2,19.386593,3.6,18.35647,6,30];\n\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":140,"wires":[["fb9501c.5e192"]]},{"id":"afc42112.bc92b","type":"comment","z":"ba4c4ba5.3971f8","name":"Perform prediction","info":"","x":130,"y":80,"wires":[]},{"id":"91a22688.274f48","type":"comment","z":"ba4c4ba5.3971f8","name":"Catch errors","info":"","x":110,"y":260,"wires":[]},{"id":"317afb91.138f54","type":"function","z":"ba4c4ba5.3971f8","name":"MAC selection","func":"// weights\nwLat = 10;\nwPER = 50;\nwENGSink = 1;\nwENGSource = 1;\n\n// calculate total score based on weighted performance\nfunction scoreMAC(macperf){\n    return wLat*macperf.LAT + wPER*macperf.PER + wENGSink*macperf.ENGSink + wENGSource*macperf.ENGSource;\n}\n\n// function to create MAC performane object\nfunction createMACPerf(arrPerf){\n    mac = {LAT : arrPerf[0], PER : arrPerf[1], ENGSink : arrPerf[2], ENGSource : arrPerf[3] }\n    return mac;\n}\n\n// function for optimal mac selection\nfunction macSelection(Contiki, CSMA, TDMA){\n    if(scoreMAC(Contiki) <= scoreMAC(CSMA)){\n        if(scoreMAC(TDMA) <= scoreMAC(Contiki))\n            return \"TDMA\";\n        else\n            return \"ContikiMAC\";\n    }\n    else\n        if(scoreMAC(TDMA) <= scoreMAC(CSMA))\n            return \"TDMA\";\n        else\n            return \"CSMA\";\n}\n\n\n// read array performance results from string input\narrPerfResults = msg.payload.replace(/\\[|\\]/g,'');\narrPerfResults = arrPerfResults.replace(/( )+/g,',');\narrPerfResults = arrPerfResults.split(',').map(Number);\n\n// ContikiMAC\narrContikiPERF = arrPerfResults.slice(0,4);\nresultContikiPERF = createMACPerf(arrContikiPERF);\n\n// CSMA\narrCSMAPERF = arrPerfResults.slice(4,8);\nresultCSMAPERF = createMACPerf(arrCSMAPERF);\n\n// TDMA\narrTDMAPERF = arrPerfResults.slice(8,12);\nresultTDMAPERF = createMACPerf(arrTDMAPERF);\n\n// output selection results\nmsg.payload = \"Select MAC: \" + macSelection(resultContikiPERF, resultCSMAPERF, resultTDMAPERF) +\n                \"\\nScore CONTIKIMAC vs CSMA vs TDMA: \" + scoreMAC(resultContikiPERF) + \" vs \" + scoreMAC(resultCSMAPERF) +\n                    \" vs \" + scoreMAC(resultTDMAPERF) + \n                \"\\nResults CONTIKIMAC: \" + JSON.stringify(resultContikiPERF) +\n                \"\\nResults CSMA: \" + JSON.stringify(resultCSMAPERF) +\n                \"\\nResults TDMA: \" + JSON.stringify(resultTDMAPERF);\n\n\nreturn msg;","outputs":1,"noerr":0,"x":860,"y":180,"wires":[["94de92d9.88025"]]},{"id":"94de92d9.88025","type":"debug","z":"ba4c4ba5.3971f8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1060,"y":180,"wires":[]}]